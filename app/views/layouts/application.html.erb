<!DOCTYPE html>
<html>
<head>
  <title>Search</title>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= stylesheet_link_tag "yhminall-6671761" %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag "//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js" %>
  <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0">
  <%= stylesheet_link_tag "http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css" %>
  <%= csrf_meta_tags %>

  <script>
      function estVisible(id_element) {
          var cadreVisible = {xMin: 0, xMax: 0, yMin: 0, yMax: 0}, elementVisible = {
              xMin: 0,
              xMax: 0,
              yMin: 0,
              yMax: 0
          };
          var source = document.getElementById(id_element), sourceParent = source.offsetParent;
          var total = {hauteur: false, largeur: false}, partiel = {hauteur: false, largeur: false};
          cadreVisible.xMin = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;
          cadreVisible.xMax = window.pageXOffset + window.innerWidth || document.documentElement.scrollLeft + document.documentElement.clientWidth || document.body.scrollLeft + document.body.clientWidth;
          cadreVisible.yMin = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
          cadreVisible.yMax = window.pageYOffset + window.innerHeight || document.documentElement.scrollTop + document.documentElement.clientHeight || document.body.scrollTop + document.body.clientHeight;
          elementVisible.xMin = source.offsetLeft;
          elementVisible.yMin = source.offsetTop;
          while (sourceParent) {
              elementVisible.xMin += sourceParent.offsetLeft;
              elementVisible.yMin += sourceParent.offsetTop;
              sourceParent = sourceParent.offsetParent;
          }
          elementVisible.xMax = elementVisible.xMin + source.offsetWidth;
          elementVisible.yMax = elementVisible.yMin + source.offsetHeight;
          if (cadreVisible.xMin <= elementVisible.xMin && cadreVisible.xMax >= elementVisible.xMax) {
              total.largeur = true;
          }
          else if (!(cadreVisible.xMax < elementVisible.xMin || cadreVisible.xMin > elementVisible.xMax)) {
              partiel.largeur = true;
          }
          if (cadreVisible.yMin <= elementVisible.yMin && cadreVisible.yMax >= elementVisible.yMax) {
              total.hauteur = true;
          }
          else if (!(cadreVisible.yMax < elementVisible.yMin || cadreVisible.yMin > elementVisible.yMax)) {
              partiel.hauteur = true;
          }
          if (total.largeur && total.hauteur) {
              return true;
          }
          else if (total.largeur && partiel.hauteur) {
              return true;
          }
          else if (total.hauteur && partiel.largeur) {
              return false;
          }
          else if (partiel.hauteur && partiel.largeur) {
              return false;
          }
          else {
              return false;
          }
      }
      window.onscroll = function () {
          if (estVisible("next")) {
              $("#next").trigger("click");
          }
      };
      function setCookie(cname, cvalue, exdays) {
          var d = new Date();
          d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
          var expires = "expires=" + d.toUTCString();
          document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      }

      function getCookie(cname) {
          var name = cname + "=";
          var ca = document.cookie.split(';');
          for (var i = 0; i < ca.length; i++) {
              var c = ca[i];
              while (c.charAt(0) == ' ') {
                  c = c.substring(1);
              }
              if (c.indexOf(name) == 0) {
                  return c.substring(name.length, c.length);
              }
          }
          return "";
      }
      function jsonConcat(o1, o2) {
          for (var key in o2) {
              o1[key] = o2[key];

          }
          return o1;
      }
      function addToHistory(keyword) {

          try {
              var keywords = getCookie(("keywords"));

              keyword = keyword + '|' + "/search/" + keyword + '|' + (new Date()).getTime();
              keywords = keywords + '||' + keyword;


              setCookie("keywords", keywords);
          }
          catch (e) {
              alert("7 => " + e.message);
          }
      }
  </script>
</head>

<body>

<div class="panel-heading"><%= render "shared/heading" %></div>
<div class="panel-body">
  <%= yield %></div>
<div class="panel-footer"><%= render "shared/footer" %></div>

</body>
</html>
